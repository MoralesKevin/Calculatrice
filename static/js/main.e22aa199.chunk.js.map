{"version":3,"sources":["reducers/Chiffres.jsx","reducers/Operateurs.jsx","components/Calculatrice.jsx","App.js","serviceWorker.js","index.js"],"names":["Chiffres","id","valeur","Operateurs","Calculette","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ecran","resultat","operators","numbers","handleClick","bind","assertThisInitialized","clear","operation","return","event","setState","target","value","includes","math","eval","toFixed","slice","length","_this2","react_default","a","createElement","className","onClick","map","number","key","operator","lib_default","total","rating","Component","App","components_Calculatrice","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e22aa199.chunk.js","sourcesContent":["const Chiffres = [\r\n    { id: 1, valeur: 7 },\r\n    { id: 2, valeur: 8 },\r\n    { id: 3, valeur: 9 },\r\n    { id: 4, valeur: 4 },\r\n    { id: 5, valeur: 5 },\r\n    { id: 6, valeur: 6 },\r\n    { id: 7, valeur: 1 },\r\n    { id: 8, valeur: 2 },\r\n    { id: 9, valeur: 3 },\r\n    { id: 10, valeur: 0 },\r\n    ]\r\n\r\nexport default Chiffres;","const Operateurs = [\r\n    { id: 11, valeur: \"/\" },\r\n    { id: 12, valeur: \"*\" },\r\n    { id: 13, valeur: \"-\" },\r\n    { id: 14, valeur: \"+\" },\r\n]\r\n\r\nexport default Operateurs;","import React, { Component } from 'react';\r\nimport math from 'mathjs';\r\nimport Chiffres from '../reducers/Chiffres';\r\nimport Operateurs from '../reducers/Operateurs';\r\nimport \"./Calculatrice.css\";\r\nimport Rater from 'react-rater'\r\nimport 'react-rater/lib/react-rater.css'\r\n\r\nclass Calculette extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ecran: \"\",\r\n            resultat: \"\",\r\n            operators: Operateurs,\r\n            numbers: Chiffres,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n        this.operation = this.operation.bind(this);\r\n        this.return = this.return.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({\r\n            ecran: this.state.ecran + event.target.value\r\n        })\r\n    }\r\n\r\n    operation() {\r\n        if (this.state.ecran.includes(\".\")) {\r\n            this.setState({ resultat: math.eval(this.state.ecran).toFixed(4) })\r\n        } else {\r\n            this.setState({ resultat: math.eval(this.state.ecran) })\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            ecran: \"\",\r\n            resultat: \"\",\r\n        })\r\n    }\r\n\r\n    return() {\r\n        this.setState({ ecran: this.state.ecran.slice(0, this.state.ecran.length - 1) })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"calculette\">\r\n                    <p className=\"ecran\">\r\n                        <span className=\"calcul\">{this.state.ecran}</span>\r\n                        <span className=\"resultat\">{this.state.resultat}</span>\r\n                    </p>\r\n                    <div className=\"pct-clr-btn\">\r\n                        <button className=\"null\" onClick={this.clear}> </button>\r\n                        <button className=\"clear\" onClick={this.clear}>C</button>\r\n                        <button className=\"retour\" onClick={this.return}>return</button>\r\n                    </div>\r\n                    <div className=\"boutons\">\r\n                        {this.state.numbers.map(number => <button className=\"touche\" onClick={this.handleClick} key={number.id} value={number.valeur}>{number.valeur}</button>)}\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btnpoint\">.</button>\r\n                    </div>\r\n                    <div className=\"operateur\">\r\n                        {this.state.operators.map(operator => <button className=\"touche\" onClick={this.handleClick} key={operator.id} value={operator.valeur}>{operator.valeur}</button>)}\r\n                    </div>\r\n                    <div className=\"egal\">\r\n                        <button className=\"btn-egal\" value=\"=\" onClick={this.operation}>=</button>\r\n                    </div>\r\n                </div>\r\n                <Rater className='rater' total={5} rating={2}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculette;","import React, { Component } from 'react';\r\nimport Calculatrice from \"./components/Calculatrice\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ecran: 0,\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <h1>Calculatrice</h1>\r\n        </header>\r\n        <div className=\"App\">\r\n          <Calculatrice />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}